"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMessageHistory = getMessageHistory;
exports.saveMessage = saveMessage;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const util_dynamodb_1 = require("@aws-sdk/util-dynamodb");
const dynamoClient = new client_dynamodb_1.DynamoDBClient({});
async function getMessageHistory(threadID) {
    const command = new client_dynamodb_1.QueryCommand({
        TableName: process.env.MESSAGE_TABLE_NAME,
        KeyConditionExpression: 'threadID = :threadID',
        ExpressionAttributeValues: {
            ':threadID': { S: threadID },
        },
        ExpressionAttributeNames: {
            '#r': 'role',
            '#c': 'content',
        },
        ProjectionExpression: '#r, #c',
        ScanIndexForward: true,
    });
    const result = await dynamoClient.send(command);
    return result.Items?.map(item => (0, util_dynamodb_1.unmarshall)(item)) || [];
}
async function saveMessage(message) {
    const timestamp = Date.now();
    const item = { ...message, timestamp };
    const command = new client_dynamodb_1.PutItemCommand({
        TableName: process.env.MESSAGE_TABLE_NAME,
        Item: (0, util_dynamodb_1.marshall)(item),
    });
    await dynamoClient.send(command);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QW5kU2F2ZU1lc3NhZ2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ2V0QW5kU2F2ZU1lc3NhZ2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBTUEsOENBaUJDO0FBRUQsa0NBVUM7QUFuQ0QsOERBQXdGO0FBQ3hGLDBEQUE4RDtBQUc5RCxNQUFNLFlBQVksR0FBRyxJQUFJLGdDQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFckMsS0FBSyxVQUFVLGlCQUFpQixDQUFDLFFBQWdCO0lBQ3BELE1BQU0sT0FBTyxHQUFHLElBQUksOEJBQVksQ0FBQztRQUM3QixTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7UUFDekMsc0JBQXNCLEVBQUUsc0JBQXNCO1FBQzlDLHlCQUF5QixFQUFFO1lBQ3ZCLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUU7U0FDL0I7UUFDRCx3QkFBd0IsRUFBRTtZQUN0QixJQUFJLEVBQUUsTUFBTTtZQUNaLElBQUksRUFBRSxTQUFTO1NBQ2xCO1FBQ0Qsb0JBQW9CLEVBQUUsUUFBUTtRQUM5QixnQkFBZ0IsRUFBRSxJQUFJO0tBQ3pCLENBQUMsQ0FBQztJQUVILE1BQU0sTUFBTSxHQUFHLE1BQU0sWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBQSwwQkFBVSxFQUFDLElBQUksQ0FBb0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNoRixDQUFDO0FBRU0sS0FBSyxVQUFVLFdBQVcsQ0FBQyxPQUEyQztJQUN6RSxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDN0IsTUFBTSxJQUFJLEdBQW9CLEVBQUUsR0FBRyxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFFeEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxnQ0FBYyxDQUFDO1FBQy9CLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQjtRQUN6QyxJQUFJLEVBQUUsSUFBQSx3QkFBUSxFQUFDLElBQUksQ0FBQztLQUN2QixDQUFDLENBQUM7SUFFSCxNQUFNLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDckMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtb0RCQ2xpZW50LCBQdXRJdGVtQ29tbWFuZCwgUXVlcnlDb21tYW5kIH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LWR5bmFtb2RiJztcbmltcG9ydCB7IG1hcnNoYWxsLCB1bm1hcnNoYWxsIH0gZnJvbSAnQGF3cy1zZGsvdXRpbC1keW5hbW9kYic7XG5pbXBvcnQgeyBJbnRlcm5hbE1lc3NhZ2UgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3QgZHluYW1vQ2xpZW50ID0gbmV3IER5bmFtb0RCQ2xpZW50KHt9KTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2VIaXN0b3J5KHRocmVhZElEOiBzdHJpbmcpOiBQcm9taXNlPEludGVybmFsTWVzc2FnZVtdPiB7XG4gICAgY29uc3QgY29tbWFuZCA9IG5ldyBRdWVyeUNvbW1hbmQoe1xuICAgICAgICBUYWJsZU5hbWU6IHByb2Nlc3MuZW52Lk1FU1NBR0VfVEFCTEVfTkFNRSxcbiAgICAgICAgS2V5Q29uZGl0aW9uRXhwcmVzc2lvbjogJ3RocmVhZElEID0gOnRocmVhZElEJyxcbiAgICAgICAgRXhwcmVzc2lvbkF0dHJpYnV0ZVZhbHVlczoge1xuICAgICAgICAgICAgJzp0aHJlYWRJRCc6IHsgUzogdGhyZWFkSUQgfSxcbiAgICAgICAgfSxcbiAgICAgICAgRXhwcmVzc2lvbkF0dHJpYnV0ZU5hbWVzOiB7XG4gICAgICAgICAgICAnI3InOiAncm9sZScsXG4gICAgICAgICAgICAnI2MnOiAnY29udGVudCcsXG4gICAgICAgIH0sXG4gICAgICAgIFByb2plY3Rpb25FeHByZXNzaW9uOiAnI3IsICNjJyxcbiAgICAgICAgU2NhbkluZGV4Rm9yd2FyZDogdHJ1ZSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGR5bmFtb0NsaWVudC5zZW5kKGNvbW1hbmQpO1xuICAgIHJldHVybiByZXN1bHQuSXRlbXM/Lm1hcChpdGVtID0+IHVubWFyc2hhbGwoaXRlbSkgYXMgSW50ZXJuYWxNZXNzYWdlKSB8fCBbXTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhdmVNZXNzYWdlKG1lc3NhZ2U6IE9taXQ8SW50ZXJuYWxNZXNzYWdlLCAndGltZXN0YW1wJz4pIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IGl0ZW06IEludGVybmFsTWVzc2FnZSA9IHsgLi4ubWVzc2FnZSwgdGltZXN0YW1wIH07XG5cbiAgICBjb25zdCBjb21tYW5kID0gbmV3IFB1dEl0ZW1Db21tYW5kKHtcbiAgICAgICAgVGFibGVOYW1lOiBwcm9jZXNzLmVudi5NRVNTQUdFX1RBQkxFX05BTUUsXG4gICAgICAgIEl0ZW06IG1hcnNoYWxsKGl0ZW0pLFxuICAgIH0pO1xuXG4gICAgYXdhaXQgZHluYW1vQ2xpZW50LnNlbmQoY29tbWFuZCk7XG59XG5cbiJdfQ==