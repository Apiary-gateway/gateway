import { z } from 'zod';
export declare const LogEntrySchema: z.ZodObject<{
    id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    timestamp: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    latency: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>>;
    is_successful: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodString]>>>;
    success_reason: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    error_reason: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    model_routing_history: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodAny, "many">]>>>;
    user_id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    metadata: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    thread_id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    provider: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    model: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    cost: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>>;
    raw_request: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    raw_response: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    error_message: z.ZodNullable<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    id?: string | null | undefined;
    metadata?: string | null | undefined;
    timestamp?: string | null | undefined;
    latency?: string | number | null | undefined;
    success_reason?: string | null | undefined;
    error_reason?: string | null | undefined;
    model_routing_history?: string | any[] | null | undefined;
    user_id?: string | null | undefined;
    thread_id?: string | null | undefined;
    cost?: string | number | null | undefined;
    raw_request?: string | null | undefined;
    raw_response?: string | null | undefined;
    error_message?: string | null | undefined;
    is_successful?: string | boolean | null | undefined;
    provider?: string | null | undefined;
    model?: string | null | undefined;
}, {
    id?: string | null | undefined;
    metadata?: string | null | undefined;
    timestamp?: string | null | undefined;
    latency?: string | number | null | undefined;
    success_reason?: string | null | undefined;
    error_reason?: string | null | undefined;
    model_routing_history?: string | any[] | null | undefined;
    user_id?: string | null | undefined;
    thread_id?: string | null | undefined;
    cost?: string | number | null | undefined;
    raw_request?: string | null | undefined;
    raw_response?: string | null | undefined;
    error_message?: string | null | undefined;
    is_successful?: string | boolean | null | undefined;
    provider?: string | null | undefined;
    model?: string | null | undefined;
}>;
export type LogEntry = z.infer<typeof LogEntrySchema>;
export declare const LogsResponseSchema: z.ZodObject<{
    logs: z.ZodArray<z.ZodObject<{
        id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        timestamp: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        latency: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>>;
        is_successful: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodString]>>>;
        success_reason: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        error_reason: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        model_routing_history: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodAny, "many">]>>>;
        user_id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        metadata: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        thread_id: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        provider: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        model: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        cost: z.ZodNullable<z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>>;
        raw_request: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        raw_response: z.ZodNullable<z.ZodOptional<z.ZodString>>;
        error_message: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        id?: string | null | undefined;
        metadata?: string | null | undefined;
        timestamp?: string | null | undefined;
        latency?: string | number | null | undefined;
        success_reason?: string | null | undefined;
        error_reason?: string | null | undefined;
        model_routing_history?: string | any[] | null | undefined;
        user_id?: string | null | undefined;
        thread_id?: string | null | undefined;
        cost?: string | number | null | undefined;
        raw_request?: string | null | undefined;
        raw_response?: string | null | undefined;
        error_message?: string | null | undefined;
        is_successful?: string | boolean | null | undefined;
        provider?: string | null | undefined;
        model?: string | null | undefined;
    }, {
        id?: string | null | undefined;
        metadata?: string | null | undefined;
        timestamp?: string | null | undefined;
        latency?: string | number | null | undefined;
        success_reason?: string | null | undefined;
        error_reason?: string | null | undefined;
        model_routing_history?: string | any[] | null | undefined;
        user_id?: string | null | undefined;
        thread_id?: string | null | undefined;
        cost?: string | number | null | undefined;
        raw_request?: string | null | undefined;
        raw_response?: string | null | undefined;
        error_message?: string | null | undefined;
        is_successful?: string | boolean | null | undefined;
        provider?: string | null | undefined;
        model?: string | null | undefined;
    }>, "many">;
    pageSize: z.ZodNumber;
    nextToken: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    queryExecutionId: z.ZodNullable<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    logs: {
        id?: string | null | undefined;
        metadata?: string | null | undefined;
        timestamp?: string | null | undefined;
        latency?: string | number | null | undefined;
        success_reason?: string | null | undefined;
        error_reason?: string | null | undefined;
        model_routing_history?: string | any[] | null | undefined;
        user_id?: string | null | undefined;
        thread_id?: string | null | undefined;
        cost?: string | number | null | undefined;
        raw_request?: string | null | undefined;
        raw_response?: string | null | undefined;
        error_message?: string | null | undefined;
        is_successful?: string | boolean | null | undefined;
        provider?: string | null | undefined;
        model?: string | null | undefined;
    }[];
    pageSize: number;
    nextToken?: string | null | undefined;
    queryExecutionId?: string | null | undefined;
}, {
    logs: {
        id?: string | null | undefined;
        metadata?: string | null | undefined;
        timestamp?: string | null | undefined;
        latency?: string | number | null | undefined;
        success_reason?: string | null | undefined;
        error_reason?: string | null | undefined;
        model_routing_history?: string | any[] | null | undefined;
        user_id?: string | null | undefined;
        thread_id?: string | null | undefined;
        cost?: string | number | null | undefined;
        raw_request?: string | null | undefined;
        raw_response?: string | null | undefined;
        error_message?: string | null | undefined;
        is_successful?: string | boolean | null | undefined;
        provider?: string | null | undefined;
        model?: string | null | undefined;
    }[];
    pageSize: number;
    nextToken?: string | null | undefined;
    queryExecutionId?: string | null | undefined;
}>;
export type LogsResponse = z.infer<typeof LogsResponseSchema>;
