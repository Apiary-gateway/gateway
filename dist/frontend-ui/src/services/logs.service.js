"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLogs = void 0;
const axios_1 = require("axios");
const logs_types_1 = require("../types/logs.types");
const getLogsEndpoint = () => {
    if (typeof window !== 'undefined' && 'LOGS_ENDPOINT' in window) {
        return window.LOGS_ENDPOINT;
    }
    alert('LOGS_ENDPOINT not configured');
    throw new Error();
};
const getLogs = async (token) => {
    const LOGS_BASE_URL = getLogsEndpoint();
    try {
        const { data } = await axios_1.default.get(`${LOGS_BASE_URL}`, {
            params: {
                token,
            },
        });
        console.log(data);
        const parsedData = logs_types_1.GetLogsResponseSchema.parse(data);
        return parsedData.body;
    }
    catch (error) {
        console.error('Error fetching logs:', error);
        alert('Error fetching logs');
        return { logs: [], page: 0, pageSize: 0, nextToken: null };
    }
};
exports.getLogs = getLogs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9ncy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZnJvbnRlbmQtdWkvc3JjL3NlcnZpY2VzL2xvZ3Muc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpQ0FBMEI7QUFDMUIsb0RBQTBFO0FBRTFFLE1BQU0sZUFBZSxHQUFHLEdBQVcsRUFBRTtJQUNuQyxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxlQUFlLElBQUksTUFBTSxFQUFFLENBQUM7UUFDL0QsT0FBUSxNQUFjLENBQUMsYUFBYSxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztJQUN0QyxNQUFNLElBQUksS0FBSyxFQUFFLENBQUM7QUFDcEIsQ0FBQyxDQUFDO0FBRUssTUFBTSxPQUFPLEdBQUcsS0FBSyxFQUFFLEtBQW9CLEVBQXlCLEVBQUU7SUFDM0UsTUFBTSxhQUFhLEdBQUcsZUFBZSxFQUFFLENBQUM7SUFDeEMsSUFBSSxDQUFDO1FBQ0gsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE1BQU0sZUFBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLGFBQWEsRUFBRSxFQUFFO1lBQ25ELE1BQU0sRUFBRTtnQkFDTixLQUFLO2FBQ047U0FDRixDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLE1BQU0sVUFBVSxHQUFHLGtDQUFxQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDZixPQUFPLENBQUMsS0FBSyxDQUFDLHNCQUFzQixFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUM7SUFDN0QsQ0FBQztBQUNILENBQUMsQ0FBQztBQWhCVyxRQUFBLE9BQU8sV0FnQmxCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCB7IEdldExvZ3NSZXNwb25zZVNjaGVtYSwgTG9nc1Jlc3BvbnNlIH0gZnJvbSAnLi4vdHlwZXMvbG9ncy50eXBlcyc7XG5cbmNvbnN0IGdldExvZ3NFbmRwb2ludCA9ICgpOiBzdHJpbmcgPT4ge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgJ0xPR1NfRU5EUE9JTlQnIGluIHdpbmRvdykge1xuICAgIHJldHVybiAod2luZG93IGFzIGFueSkuTE9HU19FTkRQT0lOVDtcbiAgfVxuICBhbGVydCgnTE9HU19FTkRQT0lOVCBub3QgY29uZmlndXJlZCcpO1xuICB0aHJvdyBuZXcgRXJyb3IoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRMb2dzID0gYXN5bmMgKHRva2VuOiBzdHJpbmcgfCBudWxsKTogUHJvbWlzZTxMb2dzUmVzcG9uc2U+ID0+IHtcbiAgY29uc3QgTE9HU19CQVNFX1VSTCA9IGdldExvZ3NFbmRwb2ludCgpO1xuICB0cnkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3MuZ2V0KGAke0xPR1NfQkFTRV9VUkx9YCwge1xuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIHRva2VuLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICBjb25zdCBwYXJzZWREYXRhID0gR2V0TG9nc1Jlc3BvbnNlU2NoZW1hLnBhcnNlKGRhdGEpO1xuICAgIHJldHVybiBwYXJzZWREYXRhLmJvZHk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbG9nczonLCBlcnJvcik7XG4gICAgYWxlcnQoJ0Vycm9yIGZldGNoaW5nIGxvZ3MnKTtcbiAgICByZXR1cm4geyBsb2dzOiBbXSwgcGFnZTogMCwgcGFnZVNpemU6IDAsIG5leHRUb2tlbjogbnVsbCB9O1xuICB9XG59O1xuIl19